package vendor.tct.iqibridge@1.0;

typedef int64_t iq_porting_status_t;

typedef uint64_t iq_io_event_t;

enum iq_porting_base_status : int64_t {
	IQ_PORTING_IOEVENT_WRITABLE = 1,
	IQ_PORTING_IOEVENT_WRITE_COMPLETE,
	IQ_PORTING_IOEVENT_READABLE,
	IQ_PORTING_IOEVENT_READ_COMPLETE,
	IQ_PORTING_IOEVENT_ERROR,
	IQ_PORTING_IOEVENT_OPEN_COMPLETE,
	IQ_PORTING_IOEVENT_NETWORK_BASE = 0x800,
	IQ_PORTING_IOEVENT_SOCKET_BASE = 0x1000,
	IQ_PORTING_IOEVENT_SMS_BASE		= 0x1800
};

enum iq_porting_status : int64_t {
	IQ_PORTING_OK						= 0,
	IQ_PORTING_ERROR					= -0x10000,
	IQ_PORTING_NOT_IMPLEMENTED,
	IQ_PORTING_INVALID_PARAM,
	IQ_PORTING_TIMEOUT,
	IQ_PORTING_OUT_OF_MEMORY,
	IQ_PORTING_SHUTDOWN_COMPLETE,
	IQ_PORTING_IO_ERROR_BASE			= -0x11000,
	IQ_PORTING_FILE_ERROR_BASE			= -0x12000,
	IQ_PORTING_SERIAL_ERROR_BASE		= -0x13000,
	IQ_PORTING_NET_ERROR_BASE			= -0x14000,
	IQ_PORTING_CLIENT_ERROR_BASE		= -0x15000,
	IQ_PORTING_SERVER_ERROR_BASE		= -0x16000
};

enum iq_porting_io_status: int64_t {
	IQ_PORTING_IO_COMPLETED = 0,
	IQ_PORTING_IO_WOULDBLOCK = -0x11000,
    IQ_PORTING_IO_ASYNC_PENDING,
	IQ_PORTING_IO_BROKEN
};